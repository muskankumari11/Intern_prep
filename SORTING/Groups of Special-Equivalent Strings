class Solution {
public:
    int numSpecialEquivGroups(vector<string>& words) {
        unordered_set<string> groups;
        for (const string& word : words) {
            string evenChars, oddChars;
            for (int i = 0; i < word.size(); i++) {
                if (i % 2 == 0) {
                    evenChars += word[i];
                } else {
                    oddChars += word[i];
                }
            }
            sort(evenChars.begin(), evenChars.end());
            sort(oddChars.begin(), oddChars.end());
            string representation = evenChars + oddChars;
            groups.insert(representation);
        }
        return groups.size();
    }
};
